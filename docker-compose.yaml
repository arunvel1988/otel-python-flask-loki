version: "3.9"

services:
  # Python Flask App
  flask-app:
    build:
      context: ./flask-app
      dockerfile: Dockerfile
    container_name: flask-app
    environment:
      FLASK_APP: app.py
      FLASK_RUN_HOST: 0.0.0.0
    ports:
      - "${FLASK_APP_PORT}:5000"
    depends_on:
      - opentelemetry-collector-svc

  # OpenTelemetry Collector
  opentelemetry-collector-svc:
    image: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:latest
    container_name: opentelemetry-collector-svc
    ports:
      - "4318:4318"   # OTLP HTTP
      - "4317:4317"   # OTLP gRPC
      - "9464:9464"   # Prometheus metrics scrape
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    environment:
      OTEL_LOG_LEVEL: debug
    command:
      - "--config=/etc/otel-collector-config.yaml"
    depends_on:
      - elasticsearch-svc
      - jaeger-svc

  # Elasticsearch (Log storage for ELK)
  elasticsearch-svc:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    container_name: elasticsearch-svc
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  # Kibana (Visualization for logs)
  kibana-svc:
    image: docker.elastic.co/kibana/kibana:8.12.0
    container_name: kibana-svc
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch-svc:9200
    depends_on:
      - elasticsearch-svc

  # Jaeger (Traces)
  jaeger-svc:
    image: jaegertracing/all-in-one:1.44
    container_name: jaeger-svc
    ports:
      - "16686:16686" # Jaeger UI
      - "14250:14250" # gRPC
      - "14268:14268" # HTTP collector
      - "14269:14269" # optional
    environment:
      COLLECTOR_ZIPKIN_HTTP_PORT: 9411

  # Prometheus (Metrics)
  prometheus-svc:
    image: prom/prometheus:latest
    container_name: prometheus-svc
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    depends_on:
      - opentelemetry-collector-svc

  # Grafana (Visualization)
  grafana-svc:
    image: grafana/grafana
    container_name: grafana-svc
    ports:
      - "${GRAFANA_PORT}:3000"
    environment:
      GF_DATABASE_TYPE: postgres
      GF_DATABASE_HOST: postgres-grafana-svc:5432
      GF_DATABASE_NAME: ${POSTGRES_GRAFANA_DB}
      GF_DATABASE_USER: ${POSTGRES_USER}
      GF_DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      - postgres-grafana-svc
      - elasticsearch-svc
      - jaeger-svc
      - prometheus-svc
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Elasticsearch
          type: elasticsearch
          access: proxy
          orgId: 1
          url: http://elasticsearch-svc:9200
          isDefault: true
        - name: Jaeger
          type: jaeger
          access: proxy
          orgId: 1
          url: http://jaeger-svc:16686
          isDefault: false
        - name: Prometheus
          type: prometheus
          access: proxy
          orgId: 1
          url: http://prometheus-svc:9090
          isDefault: false
        EOF
        /run.sh

  # Postgres for Grafana
  postgres-grafana-svc:
    image: postgres
    container_name: postgres-grafana-svc
    shm_size: 128mb
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_GRAFANA_DB}
    ports:
      - "${POSTGRES_GRAFANA_PORT}:5432"
    volumes:
      - postgres_grafana_data:/var/lib/postgresql/data

volumes:
  elasticsearch_data:
  postgres_grafana_data:
